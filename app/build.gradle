plugins {
    id 'com.android.application'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'jacoco'
    id 'com.vanniktech.android.junit.jacoco'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.stegnerd.jeopardy"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'

        test {
            java.srcDirs += [sharedTestDir]
        }

        androidTest {
            java.srcDirs += [sharedTestDir]
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

// This is included because this version of jacoc uses Java 9
// but we are using Java 8
// GeneratedSerializationConstructorAccessor1
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    // http://sangsoonam.github.io/2019/08/15/failing-unit-test-by-generatedserializationconstructoraccessor1.html
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'


    // design
    implementation "com.google.android.material:material:1.1.0"

    // Core Dependencies
    implementation 'androidx.fragment:fragment-ktx:1.3.0-alpha06'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.0"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // Dagger Hilt DI
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha01'

    // Moshi - json
    implementation "com.squareup.moshi:moshi-kotlin:1.9.2"
    // Codegen is used to generate serialization/deserialization adapters at compile time, rather than runtime
    // and to not use refelection to save on overhead.
    //https://stackoverflow.com/questions/58501918/whats-the-use-of-moshis-kotlin-codegen
    implementation "com.squareup.moshi:moshi-kotlin-codegen:1.9.2"
    implementation "com.squareup.retrofit2:converter-moshi:2.7.2"

    // RetroFit - api/ network
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:4.7.2"
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6"

    /****************
     * Unit Testing *
     ***************/
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4"
    testImplementation 'junit:junit:4.13'
    testImplementation "io.mockk:mockk:1.10.0"

    /*******************
     * Android Testing *
     ******************/
    // Coroutines
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Core Dependencies
    androidTestImplementation "androidx.navigation:navigation-testing:2.3.0"

}